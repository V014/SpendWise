<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KvRhr+ai8poAAAAASUVORK5CYII=
</value>
  </data>
</root>